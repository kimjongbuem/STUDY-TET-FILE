데이터베이스 3강 sql

DDL ( 데이터 정의 언어 ) 
기본타입
char(n) , varchar(n) - 가변길이 , int , smallint, numeric(p,d) p개의 숫자 d개의 소수점 개수. real , double, precision, float(n)
기본 스키마 정의
create table table_name( attributeName type ... primary key(attribute_primary));  주 키 속성들은 널 값을 갖지 않고 유일함.
여기서 주키는 무결성 제약조건 중 하나인데 2개를 더 소개하겠다.
foreign key(a1, a2 ... aN) reference table_name  // 반드시 table_name이 주키 속성의 이름,들이 존재해야함. 그렇지 않다면 존재하지 않은 학과 이름이 명시가 가능하기 때문 ㅠ(Limit)
그리고 not null . 
삽입 : insert into table_name values( ... );  투플 삭제 delete from table_name 릴레이션 삭제 : drop table table_name; 
alter table 명령어로 이미 존재하는 릴레이션에 속성 추가/삭제
alter table r(릴레이션) add A(추가할 속성이름) D(속성의 도메인), alter table r drop A 

select from where 절 
where절은 or not and 연산가능. 
select는 디폴트로 중복을 허용(all) 하기에 distinct를 써서 중복을 제거하자

다수의 릴레이션에서의 질의
from 에서 다수의 릴레이션 가져옴.

자연조인과 카티션곱

부가적인 기본연산
Rename 연산: old-name as new-name  // select, from에서 가능.
그럼 왜 릴레이션 재명명을 할까요? 같은 릴레이션에서 투플비교를 위해서 ^^

문자열연산
where like '%Watson%' ; 이름에 왓슨이라는 부분 문자열이 포함 된 건물의 모든 학과가 조건임.
Intro% : Intro로 시작하는 어떠한 문자열.
'---' : 세개의 문자로 이뤄진 문자열,  '---%' 세문자로 이상으로 이뤄진 문자열.

출력 순서
where ? order by attributeName desc/asc; 

Where 조건문
where salary between 90000 and 100000 
맵핑  : where (instructor.ID, dept_name) = (teaches.ID, 'Biology')

집합연산
union intersect except (합집합 교집합 차집합 연산들)

널값
널값은 unknown임 and or 연산에 영향을 준다. 널값 테스트 : where salary is null 

집계함수 avg min max sum count

그룹 group by 
Having 절 헤
그룹에 대한 조건절. 조건은 그룹에대한 집계함수조건이 필요하다!

중첩하위 질의. 
where)
in , not in 
where name not in ('Smith', 'Yazdi') order by name desc
 - 집합비교 -
some , all ( query expreesion )


빈릴레이션 테스트
exists /not exists

중복 투플 부재 ( 2009년에 많아 봐야 1번 있는 수업)
select course_id
from course as T
where 1<= (select COUNT(R.course_id)
	from section as R
	where T.course_id = R.course_id and R.year = 2009);


from절의 하위 질의들..
// 평균 급여가 42000 이상인 학과들의 교수들의 평균급여
select*
from (select dept_name, AVG(salary) as avg_salary
		from instructor
		group by dept_name)
		as dept_avg(dept_name,avg_salary)
		where avg_salary > 42000



2008 mssql에선 지원이 되지않지만, lateral 키워드를 통해 from 절의 하위질의나 이전 테이블 속성에 접근가능.

with 절

with max_budget(value) as (
	select MAX(budget)
	from department
	)
	select budget
	from department, max_budget
	where department.budget = max_budget.value

학과의 총급여가 평균학과의 총급여보다 많은 모든 학과들,
with dept_total(dept_name,value) as
	(select dept_name, SUM(salary)
	from instructor
	group by dept_name),
	dept_total_avg(value)as(
	select AVG(value)
	from dept_total)
select dept_name
from dept_total, dept_total_avg
where dept_total.value >= dept_total_avg.value

스칼라 하위질의  select에 하위 쿼리문. ㅇㅇ
select dept_name, (select COUNT(*)
				from instructor
				where department.dept_name = instructor.dept_name
				)as num_instructors
from department





